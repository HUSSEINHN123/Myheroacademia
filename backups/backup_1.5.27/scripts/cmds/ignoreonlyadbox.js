module.exports = {
	config: {
		name: "ignoreonlyadbox",
		aliases: ["ignoreadboxonly", "ignoreadminboxonly"],
		version: "1.1",
		author: "NTKhang",
		countDown: 5,
		role: 2,
		shortDescription: {
			vi: "B·ªè qua l·ªánh trong adminonly",
			en: "Ignore command in adminonly"
		},
		longDescription: {
			vi: "B·ªè qua l·ªánh trong adminonly (khi b·∫≠t adminonly, c√°c l·ªánh ƒë∆∞·ª£c th√™m t·ª´ l·ªánh n√†y ng∆∞·ªùi d√πng v·∫´n c√≥ th·ªÉ s·ª≠ d·ª•ng)",
			en: "Ignore command in adminonly (when turn on adminonly, user can use command added from this command)"
		},
		category: "owner",
		guide: {
			vi: "   {pn} add <commandName>: Th√™m l·ªánh v√†o danh s√°ch b·ªè qua"
				+ "\n   {pn} del <commandName>: X√≥a l·ªánh kh·ªèi danh s√°ch b·ªè qua"
				+ "\n   {pn} list: Xem danh s√°ch l·ªánh b·ªè qua",
			en: "   {pn} add <commandName>: Add command to ignore list"
				+ "\n   {pn} del <commandName>: Remove command from ignore list"
				+ "\n   {pn} list: View ignore list"
		}
	},

	langs: {
		vi: {
			missingCommandNameToAdd: "‚ö†Ô∏è Vui l√≤ng nh·∫≠p t√™n l·ªánh b·∫°n mu·ªën th√™m v√†o danh s√°ch b·ªè qua",
			missingCommandNameToDelete: "‚ö†Ô∏è Vui l√≤ng nh·∫≠p t√™n l·ªánh b·∫°n mu·ªën x√≥a kh·ªèi danh s√°ch b·ªè qua",
			commandNotFound: "‚ùå Kh√¥ng t√¨m th·∫•y l·ªánh \"%1\" trong danh s√°ch l·ªánh c·ªßa bot",
			commandAlreadyInList: "‚ùå L·ªánh \"%1\" ƒë√£ c√≥ trong danh s√°ch b·ªè qua",
			commandAdded: "‚úÖ ƒê√£ th√™m l·ªánh \"%1\" v√†o danh s√°ch b·ªè qua",
			commandNotInList: "‚ùå L·ªánh \"%1\" kh√¥ng c√≥ trong danh s√°ch b·ªè qua",
			commandDeleted: "‚úÖ ƒê√£ x√≥a l·ªánh \"%1\" kh·ªèi danh s√°ch b·ªè qua",
			ignoreList: "üìë Danh s√°ch l·ªánh b·ªè qua trong nh√≥m b·∫°n:\n%1"
		},
		en: {
			missingCommandNameToAdd: "‚ö†Ô∏è Please enter the command name you want to add to the ignore list",
			missingCommandNameToDelete: "‚ö†Ô∏è Please enter the command name you want to delete from the ignore list",
			commandNotFound: "‚ùå Command \"%1\" not found in bot's command list",
			commandAlreadyInList: "‚ùå Command \"%1\" already in ignore list",
			commandAdded: "‚úÖ Added command \"%1\" to ignore list",
			commandNotInList: "‚ùå Command \"%1\" not in ignore list",
			commandDeleted: "‚úÖ Removed command \"%1\" from ignore list",
			ignoreList: "üìë Ignore list in your group:\n%1"
		}
	},

	onStart: async function ({ args, message, threadsData, getLang, event }) {
		const ignoreList = await threadsData.get(event.threadID, "data.ignoreCommanToOnlyAdminBox", []);
		switch (args[0]) {
			case "add": {
				if (!args[1])
					return message.reply(getLang("missingCommandNameToAdd"));
				const commandName = args[1].toLowerCase();
				const command = global.GoatBot.commands.get(commandName);
				if (!command)
					return message.reply(getLang("commandNotFound", commandName));
				if (ignoreList.includes(commandName))
					return message.reply(getLang("commandAlreadyInList", commandName));
				ignoreList.push(commandName);
				await threadsData.set(event.threadID, ignoreList, "data.ignoreCommanToOnlyAdminBox");
				return message.reply(getLang("commandAdded", commandName));
			}
			case "del":
			case "delete":
			case "remove":
			case "rm":
			case "-d": {
				if (!args[1])
					return message.reply(getLang("missingCommandNameToDelete"));
				const commandName = args[1].toLowerCase();
				const command = global.GoatBot.commands.get(commandName);
				if (!command)
					return message.reply(getLang("commandNotFound", commandName));

				if (!ignoreList.includes(commandName))
					return message.reply(getLang("commandNotInList", commandName));
				ignoreList.splice(ignoreList.indexOf(commandName), 1);
				await threadsData.set(event.threadID, ignoreList, "data.ignoreCommanToOnlyAdminBox");
				return message.reply(getLang("commandDeleted", commandName));
			}
			case "list": {
				return message.reply(getLang("ignoreList", ignoreList.join(", ")));
			}
			default: {
				return message.SyntaxError();
			}
		}
	}
};